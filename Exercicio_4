
public class Exercicio4Balanceamento {
    public static void main(String[] args) {
        No raiz = null;
        raiz = inserir(raiz, 65);
        raiz = inserir(raiz, 95);
        raiz = inserir(raiz, 80);
    }

    public static class No {
        int valor;
        No esquerda;
        No direita;
        int altura;

        No(int valor) {
            this.valor = valor;
            this.altura = 1;
        }
    }

    public static int altura(No no) {
        if (no == null) return 0;
        return no.altura;
    }

    public static int max(int a, int b) {
        return a > b ? a : b;
    }

    public static int fatorBalanceamento(No no) {
        if (no == null) return 0;
        return altura(no.esquerda) - altura(no.direita);
    }

    public static No rotacaoDireita(No y) {
        No x = y.esquerda;
        No T2 = x.direita;
        x.direita = y;
        y.esquerda = T2;
        y.altura = max(altura(y.esquerda), altura(y.direita)) + 1;
        x.altura = max(altura(x.esquerda), altura(x.direita)) + 1;
        return x;
    }

    public static No rotacaoEsquerda(No x) {
        No y = x.direita;
        No T2 = y.esquerda;
        y.esquerda = x;
        x.direita = T2;
        x.altura = max(altura(x.esquerda), altura(x.direita)) + 1;
        y.altura = max(altura(y.esquerda), altura(y.direita)) + 1;
        return y;
    }

    public static No inserir(No no, int valor) {
        if (no == null) return new No(valor);
        if (valor < no.valor) {
            no.esquerda = inserir(no.esquerda, valor);
        } else if (valor > no.valor) {
            no.direita = inserir(no.direita, valor);
        } else {
            return no;
        }
        no.altura = 1 + max(altura(no.esquerda), altura(no.direita));
        int balanceamento = fatorBalanceamento(no);
        if (balanceamento > 1 && valor < no.esquerda.valor) return rotacaoDireita(no);
        if (balanceamento < -1 && valor > no.direita.valor) return rotacaoEsquerda(no);
        if (balanceamento > 1 && valor > no.esquerda.valor) {
            no.esquerda = rotacaoEsquerda(no.esquerda);
            return rotacaoDireita(no);
        }
        if (balanceamento < -1 && valor < no.direita.valor) {
            no.direita = rotacaoDireita(no.direita);
            return rotacaoEsquerda(no);
        }
        return no;
    }
}
